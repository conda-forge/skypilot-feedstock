context:
  version: 0.7.0
  python_min: 3.9

recipe:
  name: skypilot
  version: ${{ version }}

source:
- url: https://pypi.org/packages/source/s/skypilot/skypilot-${{ version }}.tar.gz
  sha256: f06f9712338c75d7ad256628179fc6b1c77c4d0fdea0d350823494d5cfc4d033

build:
  script: ${{ PYTHON }} -m pip install .
  python:
    entry_points:
    - sky  =  sky.cli:cli
  noarch: python
  number: 0

outputs:
  - package:
      name: skypilot
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - python >=${{ python_min }}
      - wheel
      - cachetools
      - click >=7.0
      - colorama
      - cryptography
      - jinja2 >=3.0
      - jsonschema
      - networkx
      - pandas >=1.3.0
      - pendulum
      - prettytable >=2.0.0
      - python-dotenv
      - rich
      - tabulate
      - typing-extensions
      - filelock >=3.6.0
      - packaging
      - psutil
      - pulp
      - pyyaml !=5.4.*,>3.13
      - requests
    tests:
    - python:
        python_version: ${{ python_min }}
        imports:
        - sky
        pip_check: true

  - package:
      name: skypilot-aws
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - urllib3 <2
      - awscli >=1.27.10
      - botocore >=1.29.10
      - boto3 >=1.26.1
      - colorama <0.4.5
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[aws] | grep -v 'Requirement already satisfied')\" ]"

########
# Many of the required conda-forge packages currently outdated.
# Furthermore, azure-cli is not available on conda-forge.
# Thus it would require some work to do this properly, so we'll
# skip it for now.
########
  # - package:
  #     name: skypilot-azure
  #   requirements:
  #     host:
  #     - python ${{ python_min }}.*
  #     - setuptools
  #     - pip
  #     run:
  #     # The following should be azure-cli instead of azure-cli-core,
  #     # but azure-cli is not available on conda-forge.
  #     - azure-cli-core >=2.65.0
  #     - azure-core >=1.31.0
  #     - azure-identity >=1.19.0
  #     - azure-mgmt-network >=27.0.0
  #     - azure-mgmt-compute >=33.0.0
  #     - azure-storage-blob >=12.23.1
  #     - msgraph-sdk
  #     - ray-default !=2.6.0,>=2.2.0
  #     - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #   - python:
  #       python_version: ${{ python_min }}
  #       pip_check: true
  #       imports:
  #       - sky
  #   - files:
  #     requirements:
  #       run:
  #       - python ${{ python_min }}.*
  #       - pip
  #     script:
  #     - "[ -z \"$(pip install skypilot[azure] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-cloudflare
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - urllib3 <2
      - awscli >=1.27.10
      - botocore >=1.29.10
      - boto3 >=1.26.1
      - colorama <0.4.5
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[cloudflare] | grep -v 'Requirement already satisfied')\" ]"

  ##########
  # Missing cudo-compute on conda-forge
  ##########
  # - package:
  #     name: skypilot-cudo
  #   requirements:
  #     host:
  #     - python ${{ python_min }}.*
  #     - setuptools
  #     - pip
  #     run:
  #     - cudo-compute >=0.1.10
  #     - docker
  #     - ray-default !=2.6.0,>=2.2.0
  #     - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #   - python:
  #       python_version: ${{ python_min }}
  #       pip_check: true
  #       imports:
  #       - sky
  #   - files:
  #     requirements:
  #       run:
  #       - python ${{ python_min }}.*
  #       - pip
  #   script:
  #   - "[ -z \"$(pip install skypilot[cudo] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-docker
    requirements:
      host:
        - python ${{ python_min }}.*
        - setuptools
        - pip
      run:
        - docker-py
        - ray-default !=2.6.0,>=2.2.0
        - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
      - python:
          python_version: ${{ python_min }}
          pip_check: true
          imports:
            - sky
      - files:
        requirements:
          run:
            - python ${{ python_min }}.*
            - pip
        script:
        - "[ -z \"$(pip install skypilot[docker] | grep -v 'Requirement already satisfied')\" ]"

  ##########
  # This extra is vacuous, thus not worthy of adding.
  ##########
  # - package:
  #     name: skypilot-fluidstack
  #   requirements:
  #     host:
  #       - python ${{ python_min }}.*
  #       - setuptools
  #       - pip
  #     run:
  #       - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #     - python:
  #         python_version: ${{ python_min }}
  #         pip_check: true
  #         imports:
  #           - sky
  #     - files:
  #       requirements:
  #         run:
  #           - python ${{ python_min }}.*
  #           - pip
  #       script:
  #       - "[ -z \"$(pip install skypilot[fluidstack] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-gcp
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - google-api-python-client >=2.69.0
      - google-cloud-storage
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[gcp] | grep -v 'Requirement already satisfied')\" ]"

###########
# Missing ibm-vpc and ibm-cos-sdk on conda-forge
###########
  # - package:
  #     name: skypilot-ibm
  #   requirements:
  #     host:
  #     - python ${{ python_min }}.*
  #     - setuptools
  #     - pip
  #     run:
  #     - ibm-cloud-sdk-core
  #     - ibm-vpc
  #     - ibm-platform-services
  #     - ibm-cos-sdk
  #     - ray-default !=2.6.0,>=2.2.0
  #     - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #   - python:
  #       python_version: ${{ python_min }}
  #       pip_check: true
  #       imports:
  #       - sky
  #   - files:
  #     requirements:
  #       run:
  #       - python ${{ python_min }}.*
  #       - pip
  #   script:
  #   - "[ -z \"$(pip install skypilot[ibm] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-kubernetes
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - python-kubernetes >=20.0.0
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[kubernetes] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-lambda
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - ray-default !=2.6.0,>=2.2.0
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[lambda] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-oci
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - oci
      - ray-default !=2.6.0,>=2.2.0
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[oci] | grep -v 'Requirement already satisfied')\" ]"

  ##########
  # This extra is vacuous, thus not worthy of adding.
  ##########
  # - package:
  #     name: skypilot-paperspace
  #   requirements:
  #     host:
  #       - python ${{ python_min }}.*
  #       - setuptools
  #       - pip
  #     run:
  #       - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #     - python:
  #         python_version: ${{ python_min }}
  #         pip_check: true
  #         imports:
  #           - sky
  #     - files:
  #       requirements:
  #         run:
  #           - python ${{ python_min }}.*
  #           - pip
  #       script:
  #       - "[ -z \"$(pip install skypilot[paperspace] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-remote
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - protobuf !=3.19.5,>=3.15.3
      - pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3
      # Take the intersection of all grpcio requirements to keep this noarch
      # py<3.10, not osx
      - grpcio !=1.48.0,<=1.51.3,>=1.32.0
      # py<3.10, osx
      - grpcio !=1.48.0,<=1.49.1,>=1.32.0
      # py>=3.10, not osx
      - grpcio !=1.48.0,<=1.51.3,>=1.42.0
      # py>=3.10, osx
      - grpcio !=1.48.0,<=1.49.1,>=1.42.0
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[remote] | grep -v 'Requirement already satisfied')\" ]"

  #####
  # There is not yet any runpod package on conda-forge
  #####
  # - package:
  #     name: skypilot-runpod
  #   requirements:
  #     host:
  #     - python ${{ python_min }}.*
  #     - setuptools
  #     - pip
  #     run:
  #     - runpod >=1.5.1
  #     - ${{ pin_subpackage('skypilot', exact=True) }}
  #   tests:
  #   - python:
  #       python_version: ${{ python_min }}
  #       pip_check: true
  #       imports:
  #       - sky
  #   - files:
  #     requirements:
  #       run:
  #       - python ${{ python_min }}.*
  #       - pip
  #   script:
  #   - "[ -z \"$(pip install skypilot[runpod] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-scp
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - ray-default !=2.6.0,>=2.2.0
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[scp] | grep -v 'Requirement already satisfied')\" ]"

  - package:
      name: skypilot-vsphere
    requirements:
      host:
      - python ${{ python_min }}.*
      - setuptools
      - pip
      run:
      - pyvmomi ==8.0.1.0.2
      - ${{ pin_subpackage('skypilot', exact=True) }}
    tests:
    - python:
        python_version: ${{ python_min }}
        pip_check: true
        imports:
        - sky
    - files:
      requirements:
        run:
        - python ${{ python_min }}.*
        - pip
      script:
      - "[ -z \"$(pip install skypilot[vsphere] | grep -v 'Requirement already satisfied')\" ]"

about:
  summary: "SkyPilot: An intercloud broker for the clouds"
  homepage: https://github.com/skypilot-org/skypilot
  repository: https://github.com/skypilot-org/skypilot
  documentation: https://docs.skypilot.co/en/latest/
  license: Apache-2.0
  license_file: LICENSE

extra:
  feedstock_name: skypilot
  recipe-maintainers:
    - maresb
